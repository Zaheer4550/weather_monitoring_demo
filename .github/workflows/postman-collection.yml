name: Run 3 Postman collections + trigger monitors + latency summary

on:
  push:
  workflow_dispatch:

jobs:
  run-and-monitor:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - name: current-weather
            collection: "Get Current Weather_A.postman_collection.json"
            data:       "current_weather_cities.csv"
            monitor_uid: "45974783-1f084d67-0b9f-4bf0-8be3-5f0db8c25a4f"
          - name: daily-forecast
            collection: "Get Daily Forecast- B.postman_collection.json"
            data:       "Forecast_cities.csv"
            monitor_uid: "45974783-1f084d6c-cd8b-4f70-a56c-2c989dd363c6"
          - name: historical-data
            collection: "Get Historical Data- C.postman_collection.json"
            data:       "Historical_cities.csv"
            monitor_uid: "45974783-1f084d7b-f131-47e0-b084-7926fd355a25"

    steps:
      - uses: actions/checkout@v4

      - name: Install Node & Newman
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nodejs npm jq
          npm i -g newman newman-reporter-htmlextra

      - name: Run ${{ matrix.suite.name }} via Newman (HTML + JUnit + JSON)
        run: |
          mkdir -p reports/${{ matrix.suite.name }}
          newman run "${{ matrix.suite.collection }}" \
            -d "${{ matrix.suite.data }}" \
            --reporters cli,htmlextra,json,junit \
            --reporter-htmlextra-export "reports/${{ matrix.suite.name }}/report.html" \
            --reporter-json-export       "reports/${{ matrix.suite.name }}/report.json" \
            --reporter-junit-export      "reports/${{ matrix.suite.name }}/report.junit.xml" \
            --delay-request 250

      - name: Trigger cloud monitor and fetch latest result
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          curl -s -X POST \
            "https://api.getpostman.com/monitors/${{ matrix.suite.monitor_uid }}/run" \
            -H "X-Api-Key: $POSTMAN_API_KEY" \
            -o "reports/${{ matrix.suite.name }}/monitor_kick.json"

          sleep 20
          curl -s \
            "https://api.getpostman.com/monitors/${{ matrix.suite.monitor_uid }}/results/latest" \
            -H "X-Api-Key: $POSTMAN_API_KEY" \
            -o "reports/${{ matrix.suite.name }}/monitor_latest.json"

      - name: Upload per-suite artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.suite.name }}
          path: reports/${{ matrix.suite.name }}

  aggregate:
    needs: run-and-monitor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: reports-*
          merge-multiple: true

      - name: Debug downloaded files
        run: |
          echo "Files after artifact download:"
          find reports -type f || echo "No files found"

      - name: Build combined summary.csv + index.html
        run: |
          echo "suite,iterations,assertions,failed" > summary.csv

          for n in current-weather daily-forecast historical-data; do
            json="reports/$n/report.json"
            if [ -f "$json" ]; then
              it=$(jq '.run.stats.iterations.total' "$json")
              as=$(jq '.run.stats.assertions.total' "$json")
              fl=$(jq '.run.stats.assertions.failed' "$json")
              echo "$n,$it,$as,$fl" >> summary.csv
            else
              echo "⚠️ $n has no report.json"
            fi
          done

          echo "<h1>Combined Results</h1><ul>" > index.html
          for n in current-weather daily-forecast historical-data; do
            html="reports/$n/report.html"
            if [ -f "$html" ]; then
              echo "<li><a href=\"$html\">$n (HTML Report)</a></li>" >> index.html
            else
              echo "<li>$n — ⚠️ no HTML report found</li>" >> index.html
            fi
          done
          echo "</ul>" >> index.html

          mkdir -p combined && mv summary.csv index.html combined/

      - name: Upload combined artifact
        uses: actions/upload-artifact@v4
        with:
          name: combined
          path: combined/

  latency-summary:
    needs: aggregate
    runs-on: ubuntu-latest
    steps:
      - name: Fetch 24h latency results for all monitors
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          mkdir -p latency
          START=$(date -d "yesterday 00:00:00" +%s)
          END=$(date -d "today 00:00:00" +%s)

          echo "monitor,region,timestamp,avg_latency_ms" > latency/latency.csv

          for uid in \
            45974783-1f084d67-0b9f-4bf0-8be3-5f0db8c25a4f \
            45974783-1f084d6c-cd8b-4f70-a56c-2c989dd363c6 \
            45974783-1f084d7b-f131-47e0-b084-7926fd355a25
          do
            NAME=$(curl -s -H "X-Api-Key: $POSTMAN_API_KEY" \
              "https://api.getpostman.com/monitors/$uid" | jq -r '.monitor.name')

            curl -s -H "X-Api-Key: $POSTMAN_API_KEY" \
              "https://api.getpostman.com/monitors/$uid/results?since=$START&until=$END" \
              -o latency/${uid}.json

            jq -r --arg NAME "$NAME" '.results[] | [$NAME, .region, .timestamp, .run.info.responseTime] | @csv' latency/${uid}.json \
              >> latency/latency.csv
          done

          # Build HTML table
          {
            echo "<h1>Latency Summary (24h)</h1><table border=1>"
            echo "<tr><th>Monitor</th><th>Region</th><th>Timestamp</th><th>Avg Latency (ms)</th></tr>"
            tail -n +2 latency/latency.csv | while IFS=, read monitor region ts latency; do
              echo "<tr><td>$monitor</td><td>$region</td><td>$ts</td><td>$latency</td></tr>"
            done
            echo "</table>"
          } > latency/latency.html

      - name: Upload latency summary
        uses: actions/upload-artifact@v4
        with:
          name: latency-summary
          path: latency/
