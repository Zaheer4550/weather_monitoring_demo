name: Automated API tests using Postman CLI

on: push

jobs:
  automated-api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Run your collection with CSV data file
      - name: Run Postman Collection
        run: |
          postman collection run Weather_Monitoring_Demo.postman_collection.json \
            --iteration-data weather_all.csv \
            --reporters cli,json --reporter-json-export run_results.json

      - name: Check Run Results
        run: |
          TOTAL=$(jq '.run.stats.assertions.total' run_results.json)
          FAILED=$(jq '.run.stats.assertions.failed' run_results.json)
          PASSED=$((TOTAL - FAILED))

          echo "===================="
          echo "   Postman Results  "
          echo "===================="
          echo "‚úÖ Passed: $PASSED"
          echo "‚ùå Failed: $FAILED"
          echo "üìä Total : $TOTAL"
          echo "===================="

          if [ "$FAILED" -gt 0 ]; then
            echo "‚ùå Tests failed."
            exit 1
          else
            echo "‚úÖ All tests passed."
          fi

      # Sync the updated collection into Postman workspace
      - name: Sync Collection to Postman
        run: |
          postman collection upload Weather_Monitoring_Demo.postman_collection.json \
            --workspace ${{ secrets.POSTMAN_WORKSPACE_ID }}

      # Fetch latest monitor run results from Postman
      - name: Fetch Monitor Run Results
        run: |
          curl -s -X GET "https://api.getpostman.com/monitors/${{ secrets.POSTMAN_MONITOR_ID }}/runs" \
            -H "X-Api-Key: ${{ secrets.POSTMAN_API_KEY }}" \
            -o monitor_results.json

          echo "Latest monitor run results downloaded."

      - name: Upload Run Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: postman-run-results
          path: |
            run_results.json
            monitor_results.json
