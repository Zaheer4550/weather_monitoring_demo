  update-collections:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Update Collections & Trigger Monitors
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          mkdir -p artifacts

          declare -A monitors=(
            ["current-weather"]="45974783-1f084d67-0b9f-4bf0-8be3-5f0db8c25a4f"
            ["daily-forecast"]="45974783-1f084d6c-cd8b-4f70-a56c-2c989dd363c6"
            ["historical-data"]="45974783-1f084d7b-f131-47e0-b084-7926fd355a25"
          )

          declare -A collections=(
            ["current-weather"]="12345-current-weather-uid:Get Current Weather_A.postman_collection.json"
            ["daily-forecast"]="12345-daily-forecast-uid:Get Daily Forecast- B.postman_collection.json"
            ["historical-data"]="12345-historical-data-uid:Get Historical Data- C.postman_collection.json"
          )

          for name in "${!monitors[@]}"; do
            uid=${monitors[$name]}
            coll_uid=${collections[$name]%%:*}
            coll_file=${collections[$name]#*:}

            mkdir -p artifacts/$name

            echo "🔄 Updating collection $name..."
            curl -s -X PUT "https://api.getpostman.com/collections/$coll_uid" \
              -H "X-Api-Key: $POSTMAN_API_KEY" \
              -H "Content-Type: application/json" \
              -d @"$coll_file" \
              -o artifacts/$name/collection_update.json

            echo "▶️ Triggering monitor $name..."
            curl -s -X POST "https://api.getpostman.com/monitors/$uid/run" \
              -H "X-Api-Key: $POSTMAN_API_KEY" \
              -o artifacts/$name/monitor_trigger.json

            echo "⏳ Waiting 30s for run to complete..."
            sleep 30

            echo "📥 Fetching latest result for $name..."
            curl -s -H "X-Api-Key: $POSTMAN_API_KEY" \
              "https://api.getpostman.com/monitors/$uid/results/latest" \
              -o artifacts/$name/monitor_latest.json

            echo "📊 Building CSV + HTML summary for $name..."
            echo "monitor,timestamp,region,status,responseTime" > artifacts/$name/monitor.csv

            jq -r --arg NAME "$name" '.results[] | [$NAME, .timestamp, .region, .status, .run.info.responseTime] | @csv' artifacts/$name/monitor_latest.json \
              >> artifacts/$name/monitor.csv

            {
              echo "<h1>Latest Run Report – $name</h1>"
              echo "<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>"

              echo "<h2>Monitor Results</h2>"
              echo "<table border=1><tr><th>Monitor</th><th>Timestamp</th><th>Region</th><th>Status</th><th>Response Time (ms)</th></tr>"
              tail -n +2 artifacts/$name/monitor.csv | while IFS=, read monitor ts region status rt; do
                echo "<tr><td>$monitor</td><td>$ts</td><td>$region</td><td>$status</td><td>$rt</td></tr>"
              done
              echo "</table>"

              echo "<h3>Latency by Region</h3>"
              echo "<canvas id='latencyChart'></canvas>"
              echo "<script>"
              times=$(cut -d, -f2 artifacts/$name/monitor.csv | sed 's/^/\"/;s/$/\"/' | paste -sd, -)
              asia=$(awk -F, '$3=="Asia Pacific"{print $5}' artifacts/$name/monitor.csv | paste -sd, -)
              us=$(awk -F, '$3=="US East"{print $5}' artifacts/$name/monitor.csv | paste -sd, -)
              uk=$(awk -F, '$3=="EU West"{print $5}' artifacts/$name/monitor.csv | paste -sd, -)

              echo "new Chart(document.getElementById('latencyChart'), {
                type:'line',
                data:{
                  labels:[$times],
                  datasets:[
                    {label:'Asia Pacific',data:[$asia],borderColor:'red',fill:false},
                    {label:'US',data:[$us],borderColor:'blue',fill:false},
                    {label:'UK',data:[$uk],borderColor:'green',fill:false}
                  ]
                }
              });"
              echo "</script>"
            } > artifacts/$name/monitor.html
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monitor-updates
          path: artifacts/
