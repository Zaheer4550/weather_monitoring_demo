name: Run 3 Postman collections + latency report from Newman

on:
  push:
  workflow_dispatch:

jobs:
  run-collections:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - name: current-weather
            collection: "Get Current Weather_A.postman_collection.json"
            data:       "current_weather_cities.csv"
          - name: daily-forecast
            collection: "Get Daily Forecast- B.postman_collection.json"
            data:       "Forecast_cities.csv"
          - name: historical-data
            collection: "Get Historical Data- C.postman_collection.json"
            data:       "Historical_cities.csv"

    steps:
      - uses: actions/checkout@v4

      - name: Install Node & Newman
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nodejs npm jq
          npm i -g newman newman-reporter-htmlextra

      - name: Run ${{ matrix.suite.name }} via Newman (HTML + JUnit + JSON)
        run: |
          mkdir -p reports/${{ matrix.suite.name }}
          newman run "${{ matrix.suite.collection }}" \
            -d "${{ matrix.suite.data }}" \
            --reporters cli,htmlextra,json,junit \
            --reporter-htmlextra-export "reports/${{ matrix.suite.name }}/report.html" \
            --reporter-json-export       "reports/${{ matrix.suite.name }}/report.json" \
            --reporter-junit-export      "reports/${{ matrix.suite.name }}/report.junit.xml" \
            --delay-request 250

      - name: Extract latency from Newman report.json
        run: |
          json="reports/${{ matrix.suite.name }}/report.json"

          if [ -f "$json" ]; then
            # Extract request names and response times
            jq -r '.run.executions[] | [.item.name, .response.responseTime] | @csv' "$json" \
              > "reports/${{ matrix.suite.name }}/latency.csv"

            # Calculate overall average
            avg=$(awk -F, '{sum+=$2; count++} END {if (count>0) print int(sum/count); else print 0}' "reports/${{ matrix.suite.name }}/latency.csv")
            generated_at=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

            {
              echo "<h1>Latency Report – ${{ matrix.suite.name }}</h1>"
              echo "<p><i>Generated at: ${generated_at}</i></p>"
              echo "<p><a href=\"report.html\">View Full Run Report</a></p>"

              # Table
              echo "<table border=1>"
              echo "<tr><th>Request</th><th>Latency (ms)</th></tr>"
              tail -n +1 "reports/${{ matrix.suite.name }}/latency.csv" | while IFS=, read name latency; do
                echo "<tr><td>$name</td><td>$latency</td></tr>"
              done
              echo "<tr><td><b>Overall Average</b></td><td><b>${avg}</b></td></tr>"
              echo "</table>"

              # Chart.js bar graph
              echo "<h2>Latency per Request</h2>"
              echo "<canvas id='latencyChart' width='600' height='300'></canvas>"
              echo "<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>"
              echo "<script>"
              echo "const ctx = document.getElementById('latencyChart').getContext('2d');"

              requests=$(cut -d, -f1 "reports/${{ matrix.suite.name }}/latency.csv" | sed 's/^/\"/;s/$/\"/' | paste -sd, -)
              latencies=$(cut -d, -f2 "reports/${{ matrix.suite.name }}/latency.csv" | paste -sd, -)

              echo "const data = {"
              echo "  labels: [$requests],"
              echo "  datasets: [{"
              echo "    label: 'Latency (ms)',"
              echo "    data: [${latencies}],"
              echo "    backgroundColor: 'rgba(54, 162, 235, 0.6)'"
              echo "  }]"
              echo "};"

              echo "new Chart(ctx, {type: 'bar', data: data});"
              echo "document.write('<p><b>Overall Avg Latency:</b> ${avg} ms</p>');"
              echo "</script>"
            } > "reports/${{ matrix.suite.name }}/latency.html"
          else
            echo "⚠️ No report.json found for ${{ matrix.suite.name }}" > "reports/${{ matrix.suite.name }}/latency.html"
          fi

      - name: Upload per-suite artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.suite.name }}
          path: reports/${{ matrix.suite.name }}
