name: Run 3 Postman collections + trigger monitors + latency summary (per monitor only)

on:
  push:
  workflow_dispatch:

jobs:
  run-and-monitor:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite:
          - name: current-weather
            collection: "Get Current Weather_A.postman_collection.json"
            data:       "current_weather_cities.csv"
            monitor_uid: "45974783-1f084d67-0b9f-4bf0-8be3-5f0db8c25a4f"
          - name: daily-forecast
            collection: "Get Daily Forecast- B.postman_collection.json"
            data:       "Forecast_cities.csv"
            monitor_uid: "45974783-1f084d6c-cd8b-4f70-a56c-2c989dd363c6"
          - name: historical-data
            collection: "Get Historical Data- C.postman_collection.json"
            data:       "Historical_cities.csv"
            monitor_uid: "45974783-1f084d7b-f131-47e0-b084-7926fd355a25"

    steps:
      - uses: actions/checkout@v4

      - name: Install Node & Newman
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nodejs npm jq
          npm i -g newman newman-reporter-htmlextra

      - name: Run ${{ matrix.suite.name }} via Newman (HTML + JUnit + JSON)
        run: |
          mkdir -p reports/${{ matrix.suite.name }}
          newman run "${{ matrix.suite.collection }}" \
            -d "${{ matrix.suite.data }}" \
            --reporters cli,htmlextra,json,junit \
            --reporter-htmlextra-export "reports/${{ matrix.suite.name }}/report.html" \
            --reporter-json-export       "reports/${{ matrix.suite.name }}/report.json" \
            --reporter-junit-export      "reports/${{ matrix.suite.name }}/report.junit.xml" \
            --delay-request 250

      - name: Trigger cloud monitor and fetch latest result
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          curl -s -X POST \
            "https://api.getpostman.com/monitors/${{ matrix.suite.monitor_uid }}/run" \
            -H "X-Api-Key: $POSTMAN_API_KEY" \
            -o "reports/${{ matrix.suite.name }}/monitor_kick.json"

          # Wait for Postman monitor to finish
          sleep 40
          curl -s \
            "https://api.getpostman.com/monitors/${{ matrix.suite.monitor_uid }}/results/latest" \
            -H "X-Api-Key: $POSTMAN_API_KEY" \
            -o "reports/${{ matrix.suite.name }}/monitor_latest.json"

      - name: Extract latency for current run (multi-region + chart + average)
        run: |
          json="reports/${{ matrix.suite.name }}/monitor_latest.json"

          if jq -e '.results | length > 0' "$json" > /dev/null; then
            jq -r '.results[] | [.monitor.name, .region, .timestamp, .run.info.responseTime] | @csv' \
              "$json" > "reports/${{ matrix.suite.name }}/latency.csv"

            # Calculate average latency
            avg=$(awk -F, '{sum+=$4; count++} END {if (count>0) print int(sum/count); else print 0}' "reports/${{ matrix.suite.name }}/latency.csv")
            generated_at=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

            {
              echo "<h1>Latency Report – ${{ matrix.suite.name }}</h1>"
              echo "<p><i>Generated at: ${generated_at}</i></p>"
              echo "<p><a href=\"report.html\">View Full Run Report</a></p>"

              # Table
              echo "<table border=1>"
              echo "<tr><th>Monitor</th><th>Region</th><th>Timestamp</th><th>Latency (ms)</th></tr>"
              tail -n +1 "reports/${{ matrix.suite.name }}/latency.csv" | while IFS=, read monitor region ts latency; do
                echo "<tr><td>$monitor</td><td>$region</td><td>$ts</td><td>$latency</td></tr>"
              done
              echo "<tr><td colspan=3><b>Overall Average</b></td><td><b>${avg}</b></td></tr>"
              echo "</table>"

              # Chart.js bar graph
              echo "<h2>Latency by Region</h2>"
              echo "<canvas id='latencyChart' width='400' height='200'></canvas>"
              echo "<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>"
              echo "<script>"
              echo "const ctx = document.getElementById('latencyChart').getContext('2d');"

              regions=$(cut -d, -f2 "reports/${{ matrix.suite.name }}/latency.csv" | paste -sd, -)
              latencies=$(cut -d, -f4 "reports/${{ matrix.suite.name }}/latency.csv" | paste -sd, -)

              echo "const data = {"
              echo "  labels: [$(echo $regions | sed 's/,/\",\"/g; s/^/\"/; s/$/\"/')],"
              echo "  datasets: [{"
              echo "    label: 'Latency (ms)',"
              echo "    data: [${latencies}],"
              echo "    backgroundColor: ["
              echo "      'rgba(255, 99, 132, 0.6)',"   # Asia Pacific → Red
              echo "      'rgba(54, 162, 235, 0.6)',"  # US → Blue
              echo "      'rgba(255, 206, 86, 0.6)'"   # UK → Yellow
              echo "    ]"
              echo "  }]"
              echo "};"

              echo "new Chart(ctx, {type: 'bar', data: data});"
              echo "document.write('<p><b>Overall Avg Latency:</b> ${avg} ms</p>');"
              echo "</script>"
            } > "reports/${{ matrix.suite.name }}/latency.html"
          else
            echo "⚠️ No latency data found for ${{ matrix.suite.name }}" > "reports/${{ matrix.suite.name }}/latency.html"
          fi

      - name: Upload per-suite artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.suite.name }}
          path: reports/${{ matrix.suite.name }}
